{"id":"beadui-1","title":"Build beads GUI","description":"Create an egui-based GUI for beads issue tracker","status":"in_progress","priority":0,"issue_type":"feature","created_at":"2025-10-18T21:20:42.695498-06:00","updated_at":"2025-10-19T11:00:59.284503-06:00","dependencies":[{"issue_id":"beadui-1","depends_on_id":"beadui-2","type":"blocks","created_at":"2025-10-18T21:21:59.499923-06:00","created_by":"wbbradley"}]}
{"id":"beadui-10","title":"enable loading and tracking multiple .beads root dirs","description":"we should have a left sidebar that can be collapsed or restored. this sidebar should show a list of directories that are being monitored (like during \"refresh\" operations, or loading the app). the sidebar should show checkboxes next to each directory so that it can be hidden or visible in the list view. all views so far are modeless. the user-level configuration of this data should reside in a file at ~/.config/beadui/config.yaml where we can store per-directory information. another assumption here is that we should slightly alter the boot-up behavior of the app to automatically ensure that the $PWD is added to the monitored directories list in a durable way, and if it was not already there to be set as visible by default (so that its elements appear in the list view.)\n","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-19T15:26:12.990019-06:00","updated_at":"2025-10-19T20:10:00.250039-06:00","closed_at":"2025-10-19T20:10:00.25004-06:00","dependencies":[{"issue_id":"beadui-10","depends_on_id":"beadui-12","type":"parent-child","created_at":"2025-10-19T19:28:50.193311-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-13","type":"parent-child","created_at":"2025-10-19T19:28:50.207174-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-14","type":"parent-child","created_at":"2025-10-19T19:28:50.220051-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-15","type":"parent-child","created_at":"2025-10-19T19:28:50.231678-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-16","type":"parent-child","created_at":"2025-10-19T19:28:50.243143-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-17","type":"parent-child","created_at":"2025-10-19T19:28:50.255331-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-18","type":"parent-child","created_at":"2025-10-19T19:28:50.267349-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-19","type":"parent-child","created_at":"2025-10-19T19:28:50.278323-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-20","type":"parent-child","created_at":"2025-10-19T19:28:50.289537-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-21","type":"parent-child","created_at":"2025-10-19T19:28:50.300907-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-22","type":"parent-child","created_at":"2025-10-19T19:28:50.31182-06:00","created_by":"wbbradley"},{"issue_id":"beadui-10","depends_on_id":"beadui-23","type":"parent-child","created_at":"2025-10-19T19:28:50.322878-06:00","created_by":"wbbradley"}]}
{"id":"beadui-11","title":"Add snapshot-based caching for BdClient calls","description":"The app is currently invoking 'bd' commands too frequently, causing microhangs during rendering. We should implement a snapshot-based cache that: 1) Caches all BdClient method results (keyed by method + parameters) within a refresh cycle, 2) Clears the cache when Refresh is clicked, 3) Uses read-through pattern so first call hits CLI and subsequent calls use cache. This will eliminate repeated 'bd show' calls during column cardinality calculations and readiness computations. Profile shows 88ms spent in BdClient::get_issue during show_list_table.","notes":"Here's a summary:\n\n  Snapshot-based Caching Strategy:\n\n  1. Snapshot concept: A versioned cache that holds all data fetched during a refresh cycle\n    - Contains cached results from BdClient calls (keyed by method + parameters)\n    - Each snapshot has a version number that increments on refresh\n  2. Cache invalidation:\n    - When \"Refresh\" is clicked → increment version, clear the cache\n    - All subsequent BdClient calls within that snapshot version use the cache\n  3. Read-through pattern:\n    - First call to BdClient::get_issue(\"beadui-1\") → hits the real CLI, stores result in cache\n    - Subsequent calls with same params → return cached result\n    - No duplicate bd invocations within the same snapshot\n  4. Benefits:\n    - Eliminates the microhangs from repeated bd show calls\n    - get_column_cardinality() and get_readiness() won't invoke bd multiple times for the same issue\n    - Clean separation: cache lives for one \"view\" of the data\n\n  Implementation approach:\n  - Add a snapshot_cache: HashMap\u003cCacheKey, CachedData\u003e to BeadUiApp\n  - CacheKey would be something like (MethodName, IssueId)\n  - Wrap BdClient calls to check cache first\n  - Clear cache in refresh()\n","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-19T16:12:17.921602-06:00","updated_at":"2025-10-19T18:48:33.816058-06:00","closed_at":"2025-10-19T18:48:33.816059-06:00"}
{"id":"beadui-12","title":"Add serde_yaml and dirs dependencies to Cargo.toml","description":"Add serde_yaml for YAML config file handling and dirs crate for getting ~/.config path reliably","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:29.252198-06:00","updated_at":"2025-10-19T19:39:00.265547-06:00","closed_at":"2025-10-19T19:39:00.265553-06:00"}
{"id":"beadui-13","title":"Create DirectoryConfig and AppConfig structures","description":"Create DirectoryConfig struct (path, visible, display_name) and AppConfig struct (directories, sidebar_collapsed) for managing monitored directories","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:55.008615-06:00","updated_at":"2025-10-19T19:41:01.01269-06:00","closed_at":"2025-10-19T19:41:01.012692-06:00","dependencies":[{"issue_id":"beadui-13","depends_on_id":"beadui-12","type":"blocks","created_at":"2025-10-19T19:15:15.884842-06:00","created_by":"wbbradley"}]}
{"id":"beadui-14","title":"Update Issue data model with source_directory field","description":"Add source_directory: String field to Issue struct and add SortColumn::Directory variant to support the new Directory column","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:55.747545-06:00","updated_at":"2025-10-19T19:35:03.530291-06:00","closed_at":"2025-10-19T19:35:03.530293-06:00"}
{"id":"beadui-15","title":"Implement config file load/save functionality","description":"Implement AppConfig::load() to read from ~/.config/beadui/config.yaml and AppConfig::save() to write. Create config directory if it doesn't exist. Handle missing/corrupt config files gracefully.","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:56.496873-06:00","updated_at":"2025-10-19T19:43:48.224588-06:00","closed_at":"2025-10-19T19:43:48.224589-06:00","dependencies":[{"issue_id":"beadui-15","depends_on_id":"beadui-13","type":"blocks","created_at":"2025-10-19T19:15:15.951416-06:00","created_by":"wbbradley"}]}
{"id":"beadui-16","title":"Implement smart display name logic for directories","description":"Compute display names from paths. Detect duplicate base names (e.g., two 'foo' directories). For duplicates, add abbreviated path in parentheses: 'foo (~/src/foo)', 'foo (~/old/foo)'. For unique names, show just the base name.","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:57.257716-06:00","updated_at":"2025-10-19T19:47:25.313831-06:00","closed_at":"2025-10-19T19:47:25.313832-06:00","dependencies":[{"issue_id":"beadui-16","depends_on_id":"beadui-13","type":"blocks","created_at":"2025-10-19T19:15:16.019852-06:00","created_by":"wbbradley"}]}
{"id":"beadui-17","title":"Update BdClient to support multiple directories","description":"Modify list_issues() to accept optional db_path parameter and use --db flag. Add source_directory to returned issues. Create list_issues_from_all() method that iterates visible directories and merges results.","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-19T19:14:58.027885-06:00","updated_at":"2025-10-19T19:50:03.721285-06:00","closed_at":"2025-10-19T19:50:03.721286-06:00","dependencies":[{"issue_id":"beadui-17","depends_on_id":"beadui-14","type":"blocks","created_at":"2025-10-19T19:15:16.088448-06:00","created_by":"wbbradley"}]}
{"id":"beadui-18","title":"Implement left sidebar UI with directory list","description":"Use egui::SidePanel::left() to show list of monitored directories with checkboxes (controls visibility), display names with smart disambiguation, and collapse/expand toggle. Save config whenever checkboxes are toggled.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-19T19:14:58.784132-06:00","updated_at":"2025-10-19T19:58:51.741863-06:00","closed_at":"2025-10-19T19:58:51.741864-06:00","dependencies":[{"issue_id":"beadui-18","depends_on_id":"beadui-13","type":"blocks","created_at":"2025-10-19T19:15:26.136491-06:00","created_by":"wbbradley"},{"issue_id":"beadui-18","depends_on_id":"beadui-15","type":"blocks","created_at":"2025-10-19T19:15:26.14769-06:00","created_by":"wbbradley"},{"issue_id":"beadui-18","depends_on_id":"beadui-16","type":"blocks","created_at":"2025-10-19T19:15:26.158448-06:00","created_by":"wbbradley"}]}
{"id":"beadui-19","title":"Add Directory column to issue table","description":"Add new 'Directory' column to the table (after ID, before Title) showing computed display name for each issue. Make it sortable and filterable like other columns. Column width: ~120px.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-19T19:14:59.535867-06:00","updated_at":"2025-10-19T19:52:40.480141-06:00","closed_at":"2025-10-19T19:52:40.480142-06:00","dependencies":[{"issue_id":"beadui-19","depends_on_id":"beadui-14","type":"blocks","created_at":"2025-10-19T19:15:16.726989-06:00","created_by":"wbbradley"}]}
{"id":"beadui-2","title":"Add list view","description":"Implement the main list view with sorting","status":"closed","priority":1,"issue_type":"task","assignee":"wbbradley","created_at":"2025-10-18T21:21:01.362171-06:00","updated_at":"2025-10-19T11:00:59.22175-06:00","closed_at":"2025-10-19T11:00:59.22175-06:00"}
{"id":"beadui-20","title":"Update refresh() and core methods for multi-directory support","description":"Update refresh() to load issues from all visible directories and merge into single list. Update get_issue_uncached() to pass appropriate --db flag based on issue's source directory. Make cache directory-aware for issue lookups.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-19T19:15:00.309342-06:00","updated_at":"2025-10-19T19:56:59.310985-06:00","closed_at":"2025-10-19T19:56:59.310986-06:00","dependencies":[{"issue_id":"beadui-20","depends_on_id":"beadui-17","type":"blocks","created_at":"2025-10-19T19:15:17.490746-06:00","created_by":"wbbradley"}]}
{"id":"beadui-21","title":"Add file picker UI for adding new directories","description":"Add rfd crate for native file dialogs. When user clicks '+' in sidebar, open folder picker. Validate selected directory contains .beads/ subdirectory. Add to config, mark as visible by default, save config.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-19T19:15:01.065159-06:00","updated_at":"2025-10-19T20:03:45.066681-06:00","closed_at":"2025-10-19T20:03:45.066682-06:00","dependencies":[{"issue_id":"beadui-21","depends_on_id":"beadui-18","type":"blocks","created_at":"2025-10-19T19:15:26.218996-06:00","created_by":"wbbradley"},{"issue_id":"beadui-21","depends_on_id":"beadui-12","type":"blocks","created_at":"2025-10-19T19:15:26.229698-06:00","created_by":"wbbradley"}]}
{"id":"beadui-22","title":"Add auto-detection of PWD on startup","description":"On startup, auto-add current working directory (/Users/wbbradley/src/beadui) to config if not already present and mark as visible by default. This ensures the app works immediately when launched from a beads directory.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-19T19:15:01.819013-06:00","updated_at":"2025-10-19T19:55:38.297158-06:00","closed_at":"2025-10-19T19:55:38.297159-06:00","dependencies":[{"issue_id":"beadui-22","depends_on_id":"beadui-15","type":"blocks","created_at":"2025-10-19T19:15:18.918389-06:00","created_by":"wbbradley"}]}
{"id":"beadui-23","title":"Test multi-directory functionality end-to-end","description":"Build and run the app. Verify PWD auto-added on first launch. Test adding additional directories via '+' button. Test checkbox toggle for visibility. Test sidebar collapse/restore. Verify issues from multiple directories display correctly with Directory column. Test filtering and sorting by directory.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-19T19:15:02.577279-06:00","updated_at":"2025-10-19T20:09:47.874093-06:00","closed_at":"2025-10-19T20:09:47.874095-06:00","dependencies":[{"issue_id":"beadui-23","depends_on_id":"beadui-18","type":"blocks","created_at":"2025-10-19T19:15:26.291462-06:00","created_by":"wbbradley"},{"issue_id":"beadui-23","depends_on_id":"beadui-19","type":"blocks","created_at":"2025-10-19T19:15:26.301994-06:00","created_by":"wbbradley"},{"issue_id":"beadui-23","depends_on_id":"beadui-20","type":"blocks","created_at":"2025-10-19T19:15:26.312525-06:00","created_by":"wbbradley"},{"issue_id":"beadui-23","depends_on_id":"beadui-21","type":"blocks","created_at":"2025-10-19T19:15:26.323425-06:00","created_by":"wbbradley"},{"issue_id":"beadui-23","depends_on_id":"beadui-22","type":"blocks","created_at":"2025-10-19T19:15:26.333943-06:00","created_by":"wbbradley"}]}
{"id":"beadui-24","title":"arrow keys in list view are not using current sort order","description":"","status":"open","priority":2,"issue_type":"bug","created_at":"2025-10-19T19:31:04.983468-06:00","updated_at":"2025-10-19T19:31:04.983468-06:00"}
{"id":"beadui-25","title":"Fix column overdraw with proper clipping","description":"Columns in the table are overdrawing one another. Rendering should be clipped to column boundaries to prevent text from one column appearing in another.","status":"open","priority":1,"issue_type":"bug","created_at":"2025-10-19T20:09:30.733319-06:00","updated_at":"2025-10-19T20:09:30.733319-06:00"}
{"id":"beadui-26","title":"Fix list view and split view overdraw with clipping","description":"The list view and split view panels are overdrawing one another. Rendering should be clipped to panel boundaries to prevent content from overlapping between the list and detail views.","status":"open","priority":1,"issue_type":"bug","created_at":"2025-10-19T20:09:30.840089-06:00","updated_at":"2025-10-19T20:09:30.840089-06:00"}
{"id":"beadui-27","title":"Move sidebar expand/collapse button to top menu bar","description":"The sidebar expand button currently appears as a floating window that can overdraw list view data. Instead, the expand/collapse functionality should be integrated into the top menu bar alongside the app title, similar to how Refresh and Filter are positioned.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-19T20:09:36.567237-06:00","updated_at":"2025-10-19T20:09:36.567237-06:00"}
{"id":"beadui-3","title":"Add issue editing in detail view","description":"Allow editing issue fields (title, description, status, priority, assignee) from the detail view","notes":"This is an edit to a closed issue.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-19T11:01:19.415525-06:00","updated_at":"2025-10-19T13:57:34.132044-06:00","closed_at":"2025-10-19T13:57:34.108919-06:00"}
{"id":"beadui-4","title":"Add new issue creation dialog","description":"Add button and dialog to create new issues from the GUI","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T11:01:19.475502-06:00","updated_at":"2025-10-19T11:01:19.475502-06:00"}
{"id":"beadui-5","title":"Improve visual styling","description":"Better colors, fonts, spacing, and overall visual design","notes":"blah","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-19T11:01:26.576138-06:00","updated_at":"2025-10-19T13:54:00.914684-06:00","closed_at":"2025-10-19T13:53:44.971271-06:00"}
{"id":"beadui-6","title":"allow resizing of the top horizontal list/detail split","description":"let's enable moving the split location up and down. this implies that we should make the size of the divider a bit larger, and respond to mouseover cursor changes, etc","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-19T13:23:52.464655-06:00","updated_at":"2025-10-19T13:41:29.679507-06:00","closed_at":"2025-10-19T13:41:29.679508-06:00"}
{"id":"beadui-7","title":"let's add a column for blockers","description":"it would be nice to see the dependency graph at a quick glance. we could have a column that at the very least just listed the count of dependent issues and blockers for each issue in the list view. this work should also visit the detail view and make sure that the dependents section is always visible even if it is empty. and, it should show dependents and blockers. we should also make sure we are using a uniform nomenclature for these two concepts in all places (think ingress and egress from a dag)","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-19T13:27:03.838535-06:00","updated_at":"2025-10-19T18:48:33.767011-06:00","closed_at":"2025-10-19T18:48:33.767012-06:00"}
{"id":"beadui-8","title":"column header filters","description":"each column should have a default filter (like status should default to filtering out \"closed\") and then we should allow a right-click context menu where items can be filtered in or out. for cells with a high cardinality (above 20) we should put a label/note explaining that filtering is not available.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-19T13:29:25.047571-06:00","updated_at":"2025-10-19T15:40:23.24792-06:00","closed_at":"2025-10-19T15:40:23.234439-06:00"}
{"id":"beadui-9","title":"Fix font rendering on macOS","description":"The UI is currently using a generic font (appears to be Ubuntu or similar) instead of the native macOS system UI font. We should configure egui to use the system's San Francisco font for a more native look.","status":"closed","priority":2,"issue_type":"bug","created_at":"2025-10-19T14:12:26.561963-06:00","updated_at":"2025-10-19T15:41:10.846699-06:00","closed_at":"2025-10-19T15:41:10.835066-06:00"}
